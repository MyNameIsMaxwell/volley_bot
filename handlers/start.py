import asyncio
from aiogram import types
from aiogram.types import ChatActions
from aiogram.dispatcher.filters import state
from loguru import logger

from loader import bot, dp
from . import menu, first_connection
from database import datawork
from states.new_states import GreetingsStates


@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    keyboard_markup = types.ReplyKeyboardMarkup(row_width=3, resize_keyboard=True, one_time_keyboard=True)
    btns_text = ('–î–∞!üéí', '–ù–µ—Çüíº')
    keyboard_markup.row(*(types.KeyboardButton(text) for text in btns_text))
    await message.reply(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}, –∏ –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É Brest Volley!üî•üôå\n\n–†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –≤ —Ä—è–¥–∞—Ö –Ω–∞—à–µ–≥–æ –≤–æ–ª–µ–π–±–æ–ª—å–Ω–æ–≥–æ –∫–ª—É–±–∞ –∏ —à–∫–æ–ª—ã –≤–æ–ª–µ–π–±–æ–ª–∞!üèÜüèê\n\nBrest Volley - —ç—Ç–æ –ö–ª—É–±, –æ–±—ä–µ–¥–∏–Ω—è—é—â–∏–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ –∏ –ª—é–±–∏—Ç–µ–ª–µ–π –≤–æ–ª–µ–π–±–æ–ª–∞ –≤ –æ–¥–Ω–æ –±–æ–ª—å—à–æ–µ –∫–æ–º—å—é–Ω–∏—Ç–∏!\n\n–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥, –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–µ—Ä—ã, –≤–∏–¥–µ–æ–∞–Ω–∞–ª–∏–∑ —Ç–µ—Ö–Ω–∏–∫–∏ –∏ –º–Ω–æ–≥–æ –¥—Ä—É–≥–æ–µ –∂–¥–µ—Ç –í–∞—Å –≤ –≤–æ–ª–µ–π–±–æ–ª—å–Ω–æ–º –∫–ª—É–±–µ ¬´Brest Volley¬ª! üî•üèÜü•á\n\n–†–∞–∑–º–∏–Ω–æ—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å: –¢—ã –µ—â–µ —É—á–∏—à—å—Å—è –≤ —à–∫–æ–ª–µ?',
                        parse_mode="html",
                        reply_markup=keyboard_markup)


@dp.message_handler(text='–ù–µ—Çüíº')
@logger.catch()
async def send_video(message: types.Message):
    await datawork.add_user(message)
    await datawork.worker_change(message)
    await message.reply(f'–¢–æ–≥–¥–∞ –≤–æ–ø—Ä–æ—Å –ø–æ—Å–µ—Ä—å–µ–∑–Ω–µ–µ: <em>–ó–∞—Ä—è–∂–∞–µ—Ç –ª–∏ —Ç–µ–±—è <b>—Ç–∞–∫–∞—è</b> –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞?</em>üëá', parse_mode="html")
    keyboard_markup = types.ReplyKeyboardMarkup(row_width=3, resize_keyboard=True, one_time_keyboard=True)
    btns_text = ('–ú–Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!ü§©', '–ù–µ –æ—á–µ–Ω—åü´§')
    keyboard_markup.row(*(types.KeyboardButton(text) for text in btns_text))
    volley_preview = 'BAACAgIAAxkDAAIFumO0q3u-Apjr9TcW96lztRxbE1UtAAKaJQACp2-gSeIMdWO_IrOPLQQ'
    await bot.send_chat_action(message.chat.id, action=ChatActions.UPLOAD_VIDEO)
    await asyncio.sleep(2)
    await bot.send_video(message.chat.id,
                         video=volley_preview,
                         reply_markup=keyboard_markup)


@dp.message_handler(text='–î–∞!üéí')
@logger.catch()
async def send_video(message: types.Message):
    await datawork.add_user(message)
    await datawork.schooler_change(message)
    await message.reply(f'–¢–æ–≥–¥–∞ –≤–æ–ø—Ä–æ—Å –ø–æ—Å–µ—Ä—å–µ–∑–Ω–µ–µ: <em>–ó–∞—Ä—è–∂–∞–µ—Ç –ª–∏ —Ç–µ–±—è <b>—Ç–∞–∫–∞—è</b> –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞?</em>üëá', parse_mode="html")
    keyboard_markup = types.ReplyKeyboardMarkup(row_width=3, resize_keyboard=True, one_time_keyboard=True)
    btns_text = ('–ú–Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!ü§©', '–ù–µ –æ—á–µ–Ω—åü´§')
    keyboard_markup.row(*(types.KeyboardButton(text) for text in btns_text))
    volley_preview = 'BAACAgIAAxkBAAIIgWO8nMK1wF9B7T6QV1CywIY7eBdPAAI9KgACW9LpSbwgjFKLDxfuLQQ'
    await bot.send_chat_action(message.chat.id, action=ChatActions.UPLOAD_VIDEO)
    await asyncio.sleep(2)
    await bot.send_video(message.chat.id,
                         video=volley_preview,
                         reply_markup=keyboard_markup)


@dp.message_handler(text='–ú–Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!ü§©')
@dp.message_handler(text='–•–æ—Ä–æ—à–æ! –ß—Ç–æ —Ç–∞–º —É –≤–∞—Å?')
@dp.message_handler(lambda message: message.text.startswith('–õ–∞–∞–∞–¥–Ω–æ'))
async def greetings_answer(message: types.Message):
    await message.answer(f'<b>–û—Ç–ª–∏—á–Ω–æ!</b> –¢–æ–≥–¥–∞..', parse_mode="html")
    # await msg.reply(f'–ü—Ä–∏–≤–µ—Ç, {msg.from_user.first_name}üëã –Ø BrestVolleybot. –û—Ç –º–µ–Ω—è —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–∞ –Ω–µ–¥–µ–ª—é, –ª–∏–±–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ –ª—É—á—à–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å, –±–∏—Ç—å –∏ –ø–∞—Å–æ–≤–∞—Ç—å)')
    if await datawork.get_user_status(message) is True:
        keyboard_markup = types.ReplyKeyboardMarkup(row_width=3, resize_keyboard=True, one_time_keyboard=True)
        btns_text = ('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω–æ–µ!üòç', '–•–æ—á—É —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ!')
        keyboard_markup.row(*(types.KeyboardButton(text) for text in btns_text))
    else:
        keyboard_markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True, one_time_keyboard=True)
        btns_text = ('üèê–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—éüèê')
        keyboard_markup.add(btns_text)
    greetings_video = 'BAACAgIAAxkBAAIF-mO1THv0I_R3sAdzlGDX_gI_g8JxAALJHwACp2-oST5fmkYUl1jdLQQ'
    await bot.send_video(message.chat.id,
                         video=greetings_video,
                         reply_markup=keyboard_markup)


@dp.message_handler(text='–ù–µ –æ—á–µ–Ω—åü´§')
async def ungreetings_answer(message: types.Message):
    keyboard_markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True, one_time_keyboard=True)
    btns_text = ('–•–æ—Ä–æ—à–æ! –ß—Ç–æ —Ç–∞–º —É –≤–∞—Å?', '–í—Å–µ —Ä–∞–≤–Ω–æ –Ω–µ—Ç!')
    keyboard_markup.row(*(types.KeyboardButton(text) for text in btns_text))
    if await datawork.schooler_get(message) == 0:
        volley_preview = 'BAACAgIAAxkDAAIFumO0q3u-Apjr9TcW96lztRxbE1UtAAKaJQACp2-gSeIMdWO_IrOPLQQ'
    else:
        volley_preview = 'BAACAgIAAxkBAAIIgWO8nMK1wF9B7T6QV1CywIY7eBdPAAI9KgACW9LpSbwgjFKLDxfuLQQ'
    await message.reply_video(
                         video=volley_preview,
                         caption='–ê –º–æ–∂–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–∏ –≤–∏–¥–µ–æ –µ—â–µ —Ä–∞–∑–æ–∫üòÖ',
                         reply_markup=keyboard_markup)


@dp.message_handler(text='–í—Å–µ —Ä–∞–≤–Ω–æ –Ω–µ—Ç!')
async def absolutely_no(message: types.Message):
    keyboard_markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    btns_text = ('–õ–∞–∞–∞–¥–Ω–æ, —è –ø–µ—Ä–µ–¥—É–º–∞–ª)')
    keyboard_markup.add(btns_text)
    sad_sticker_id = 'CAACAgIAAxkBAAEHHnRjtVPjB5BM2GLxSqTkDT-Hzr0ZWQACNwUAAiMFDQABV0mQXjjUSrEtBA'
    await message.answer("–ñ–∞–ª—å, —á—Ç–æ —Ç–µ–±–µ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å..")
    await message.answer_sticker(sad_sticker_id, reply_markup=keyboard_markup)


@dp.message_handler(text='üèê–û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—éüèê')
async def greetings_answer(message: types.Message):
    await message.reply(f'–ï—â–µ —Ä–∞–∑ –ø—Ä–∏–≤–µ—Ç‚úã –Ø BrestVolleybot. –û—Ç –º–µ–Ω—è —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–∞ –Ω–µ–¥–µ–ª—é, –ª–∏–±–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ –ª—É—á—à–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å, –±–∏—Ç—å –∏ –ø–∞—Å–æ–≤–∞—Ç—å)')
    await menu.menu_cmd(message)


@dp.message_handler(text='–•–æ—á—É —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ!')
async def greetings_answer(message: types.Message):
    await message.reply(f'–ï—â–µ —Ä–∞–∑ –ø—Ä–∏–≤–µ—Ç‚úã –Ø BrestVolleybot. –û—Ç –º–µ–Ω—è —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–∞ –Ω–µ–¥–µ–ª—é, –ª–∏–±–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ –ª—É—á—à–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å, –±–∏—Ç—å –∏ –ø–∞—Å–æ–≤–∞—Ç—å)')
    await menu.menu_cmd(message)